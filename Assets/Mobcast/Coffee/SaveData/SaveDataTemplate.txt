using UnityEngine;
using Mobcast.Coffee.SaveData;

/// <summary>
/// #SCRIPTNAME#
/// </summary>
/// <example>
///	// Initialize and desplay current data.
/// // current data is loaded automatically.
/// #SCRIPTNAME#.Initialize();
/// Debug.LogFormat("Current: {0}, {1}", #SCRIPTNAME#.current.uniqueId, #SCRIPTNAME#.current.sampleValue);
///
/// // Create new data.
/// #SCRIPTNAME#.CreateEntity( "<uniqueId>" );
/// #SCRIPTNAME#.current.sampleValue = 100;
///
/// // Change value and save.
/// #SCRIPTNAME#.current.sampleValue = 200;
/// #SCRIPTNAME#.SaveEntity();
///
/// // Load other data with id.
/// #SCRIPTNAME#.LoadEntity( "<otherId>" );
/// Debug.LogFormat("Current: {0}, {1}", #SCRIPTNAME#.current.uniqueId, #SCRIPTNAME#.current.sampleValue);
/// </example>
[System.Serializable]
public class #SCRIPTNAME# : SaveData<#SCRIPTNAME#.Entity, #SCRIPTNAME#>
{
	[System.Serializable]
	public class Entity : SaveDataEntity
	{
		// #### ADD THE SERIALIZED FIELDS TO BE SAVED BELOW ####
		public int sampleValue = 1000;
	}

	/// <summary>
	/// セーブデータ保存パス.
	/// PlayerPrefsのキーやローカルファイルパスを指定します.
	/// </summary>
	public override string Path { get { return "#SCRIPTNAME#"; } }


	/// <summary>
	/// ストレージへセーブデータJsonを書き込むためのコールバックです.
	/// PlayerPrefsやローカルファイルを対象にすることができます.
	/// </summary>
	protected override void OnStoreJson(string json)
	{
		PlayerPrefs.SetString(Path, json);
	}

	/// <summary>
	/// ストレージからセーブデータJsonを読み込むためのコールバックです.
	/// PlayerPrefsやローカルファイルを対象にすることができます.
	/// </summary>
	protected override string OnRestoreJson()
	{
		return PlayerPrefs.GetString(Path, "{}");
	}
}